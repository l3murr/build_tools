kind: Deployment
apiVersion: apps/v1
metadata:
  name: mysql-$$
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mysql-$$
  template:
    metadata:
      labels:
        name: mysql-$$
    spec:
      containers:
        - image: tms-mysql:v2
          name: mysql-$$
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: password
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/www/html
      volumes:
        - name: mysql-persistent-storage
          hostPath:
            path: /data/code_$$
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      name: nginx
  template:
    metadata:
      labels:
        name: nginx
    spec:
      containers:
        - image: tms-nginx:v2
          imagePullPolicy: Never
          name: nginx
          ports:
            - containerPort: 443
              name: https-1
            - containerPort: 444
              name: https-2
            - containerPort: 445
              name: https-3
            - containerPort: 446
              name: https-4
            - containerPort: 8083
              name: coder-1
            - containerPort: 8084
              name: coder-2
            - containerPort: 8085
              name: coder-3
            - containerPort: 8086
              name: coder-4
            - containerPort: 5173
              name: vite-1
            - containerPort: 5174
              name: vite-2
            - containerPort: 5175
              name: vite-3
            - containerPort: 5176
              name: vite-4
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: server-$$
spec:
  replicas: 1
  selector:
    matchLabels:
      name: server-$$
  template:
    metadata:
      labels:
        name: server-$$
    spec:
      containers:
        - image: tms-server:v2
          imagePullPolicy: Never
          name: server-$$
          env:
            - name: APP_ENV
              value: "local"
            - name: APP_KEY
              value: "base64:tmngqCZPOfxduklCUye1co12Vb9Ep9qVOV1oPEhyj8c="
            - name: APP_URL
              value: "https://^^:**"
            - name: APP_BASE_PATH
              value: "/var/www/html/backend"
            - name: LARAVEL_OCTANE
              value: "1"
            - name: DB_USERNAME
              value: "root"
            - name: DB_PASSWORD
              value: "password"
            - name: DB_DATABASE
              value: "c45d86012a4e470091d7e186397a55a0"
            - name: DB_HOST
              value: "mysql-service-$$.default.svc.cluster.local"
            - name: DB_PORT
              value: "3306"
            - name: DB_WH_HOST
              value: "mysql-service-$$.default.svc.cluster.local"
            - name: DB_WH_PORT
              value: "3306"
            - name: SANCTUM_STATEFUL_DOMAINS
              value: "https://^^:**"
            - name: SESSION_DOMAIN
              value: "^^"
            - name: SHARED_ENCRYPTION_KEY
              value: "SUPER_SECRET_KEY_SHHH"
            - name: XDEBUG_SESSION
              value: "1"
          ports:
            - containerPort: 80
              name: http
            - containerPort: 8080
              name: coder
            - containerPort: 30000
              name: websocket
            - containerPort: 5173
              name: vite
          volumeMounts:
            - name: server-persistent-storage
              mountPath: /var/www/html
            - name: ssh
              mountPath: /root
          securityContext:
            privileged: true
      volumes:
        - name: server-persistent-storage
          hostPath:
            path: /data/code_$$
        - name: ssh
          hostPath:
            path: /data/home
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: websocket-$$
spec:
  replicas: 1
  selector:
    matchLabels:
      name: websocket-$$
  template:
    metadata:
      labels:
        name: websocket-$$
    spec:
      containers:
        - image: tms-websocket:v2
          name: websocket-$$
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: password
          ports:
            - containerPort: 9000
              name: websocket
---
apiVersion: v1
kind: Service
metadata:
  name: websocket-service-$$
spec:
  selector:
    name: websocket-$$
  ports:
    - protocol: TCP
      port: 9000
      name: websocket
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service-$$
spec:
  selector:
    name: mysql-$$
  ports:
    - protocol: TCP
      port: 3306
      name: mysql
---
apiVersion: v1
kind: Service
metadata:
  name: server-service-$$
spec:
  selector:
    name: server-$$
  ports:
    - protocol: TCP
      port: 8080
      name: coder
    - protocol: TCP
      port: 80
      name: app
    - protocol: TCP
      port: 30000
      name: websocket
    - protocol: TCP
      port: 5173
      name: vite
